#!/usr/bin/env ruby

# frozen_string_literal: true

require 'optparse'

options = {}

REMOTE_SHORTCUTS = { h: :heroku, p: :production, s: :staging }.freeze

OptionParser.new do |opts|
  opts.banner = <<~BANNER
    Calls Rails console in a Heroku app. Requires heroku CLI.

    Usage: hrc [-a app_name] [[-d] -r remote_name] [-s]

    Remote name shortcuts
    ---------------------
    Easier way to specify -r values. They can be disabled with the -d option (if you have a remote called 'h', for example)
    - Use -rh as a shortcut for heroku
    - Use -rp as a shortcut for production
    - Use -rs as a shortcut for staging.

    Options
    -------
  BANNER

  opts.on('-aAPP_NAME', '--app=APP_NAME', 'Heroku app name to use. Has precedence over --remote') do |a|
    options[:app] = a
  end

  opts.on('-d', '--disable-remote-shortcuts', 'Disables -r shortcuts (for remote)') do
    options[:disable_remote_shortcuts] = true
  end

  opts.on('-rREMOTE_NAME', '--remote=REMOTE_NAME', <<~DESC.chomp) do |r|
    Git remote to use if inside the project folder. It's an alternative to --app. See shortcuts in banner above.
  DESC
    options[:remote] = r

    if !options[:disable_remote_shortcuts] && (found = REMOTE_SHORTCUTS[options[:remote]&.to_sym])
      options[:remote] = found
    end
  end

  opts.on('-s', '--sandbox', 'Enable sandbox Rails console (rollbacks DB transactions)') do
    options[:sandbox] = true
  end
end.parse!

cmd = "heroku run \"rails c#{' --sandbox' if options[:sandbox]}\""
cmd << " --remote #{options[:remote]}" if options[:remote]
cmd << " --app #{options[:app]}" if options[:app]
puts cmd
system cmd
